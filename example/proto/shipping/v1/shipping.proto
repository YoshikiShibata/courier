syntax = "proto3";

package yoshikishibata.courier.example.api.shipping.v1;

option go_package = "/shipping_v1";

/**
 * Shippingサービスは、商品の発送とその追跡の管理を行います。
 */
service Shipping {
  // 商品の発送処理を行います。
  rpc Create(CreateShippingRequest) returns (CreateShippingResponse) {}
  // 商品の発送ステータスを返します。
  rpc Status(ShippingStatusRequest) returns (ShippingStatusResponse) {}
}

/**
 * CreateShippingは、発送する商品をまとめたパッケージを受け取り発送します。
 * - 発送のステータスを返すためのshipping_idを返します。
 */
message CreateShippingRequest { string order_id = 1; }

message CreateShippingResponse { string shipping_id = 1; }

/**
 * ShippingStatusは、商品の発送のステータスを返します。
 *
 * [エラー]
 * - InvalidArgument:
 *   - shipping_idが空文字列
 * - NotFound:
 *   - shipping_idで指定された発送がない
 */
message ShippingStatusRequest { string shipping_id = 1; }

message ShippingStatusResponse {
  enum Status {
    UNSPECIFIED = 0;
    // 発送待ち
    AWAITING_SHIPMENT = 1;
    // 発送済み（配送中）
    OUT_FOR_DELIVERY = 2;
    // 配達済み
    DELIVERED = 3;
  }

  string shippid_id = 1;
  Status status = 2;
}
